version: '3.8'

networks:
  taskgenie-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:

services: 
  # DataBase Services
  mongodb:
    image: mongo:7.0
    container_name: taskgenie-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-taskgenie}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - taskgenie-network
  
  redis: 
    image: redis:7.2-alpine
    container_name: taskgenie-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - taskgenie-network

# API Gateway
  gateway:
    build:
      context: .services/gateway
      dockerfile: Dockerfile
    container_name: taskgenie-gateway
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      AUTH_SERVICE_URL: http://auth-service:4001
      TASK_SERVICE_URL: http://task-service:4002
      AI_SERVICE_URL: http://ai-service:4003
      USER_SERVICE_URL: http://user-service:4004
      REALTIME_SERVICE_URL: http://realtime-service:4005
    ports:
      - "4000:4000"
    depends_on:
      - auth-service
      - task-service
      - ai-service
      - user-service
      - realtime-service
    networks:
      - taskgenie-network

# Microservices
auth-service:
  build:
    context: ./services/auth-service
    dockerfile: Dockerfile
  container_name: taskgenie-auth
  restart: unless-stopped
  environment:
    NODE_ENV: production
    PORT: 4001
    MONGODB_URI: mongodb+srv://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DB:-taskgenie}?authSource=admin
    JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
    JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
    BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
  depends_on:
    - mongodb
  networks:
    - taskgenie-network
  
task-service:
  build:
    context: ./services/task-service
    dockerfile: Dockerfile
  container_name: taskgnie-tasks
  restart: unless-stopped
  environment:
    NODE_ENV: production
    PORT: 4002
    MONGODB_URI:  mongodb+srv://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DB:-taskgenie}?authSource=admin
    REDIS_URL: redis://default:${REDIS_PASSWORD:-redis123}@redis:6379
  depends_on:
    - mongodb
    - redis
  network:
    - taskgenie-network

ai-service:
  build:
    context: ./Services/ai-service
    dockerfile: Dockerfile
  container_name: taskgenie-ai
  restart: unless-stopped
  environment:
    NODE_ENV: production
    PORT: 4003
    OPENAI_API_KEY: ${OPENAI_API_KEY}
    OPENAI_MODEL: ${OPENAI_MODEL:-gpr-3.5-turbo}
    REDIS_URL: redis://default:${REDIS_PASSWORD:-redis123}@redis:6379
  depends_on: 
    - redis
  networks:
    - taskgenie-network

user-service:
  build: 
    context: ./services/user-service
    dockerfile: Dockerfile
  container_name: taskgenie-users
  restart: unless-stopped
  enviromnet: 
    NODE_ENV: production
    PORT: 4004
    MONGODB_URI:  mongodb+srv://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD}@mongodb:27017/${MONGO_DB:-taskgenie}?authSource=admin
    REDIS_URL: redis://default:${REDIS_PASSWORD:-redis123}@redis:6379
  depends_on:
    - mongodb
    - redis
  networks:
    - taskgenie-network

client:
  build:
    context: ./client
    dockerfile: Dockerfile
  container_name: taskgenie-client
  restart: unless-stopped
  environment: 
    NODE_ENV: production
    NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:4000}
    NEXT_PUBLIC_WS_URL: ${NEXT_PUBLIC_WS_URL:-http://localhost:4005}
    NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-nextaut-secret}
    NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
  ports:
    - "3000:3000"
  depends_on:
    - gateway
  networks:
    - taskgenie-network
